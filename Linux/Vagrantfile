# -*- mode: ruby -*-
# vi: set ft=ruby :

$install = <<SCRIPT
echo Updating Host....
dnf update -y
echo '=================================='
echo updating hosts file...
echo '192.168.60.2 controlnode' | tee -a /etc/hosts
echo '192.168.60.3 node1' | tee -a /etc/hosts
echo '192.168.60.4 node2' | tee -a /etc/hosts
echo '192.168.60.5 node3' | tee -a /etc/hosts
SCRIPT

public_key = File.read("id_rsa.pub")

$pubkeyex = <<SCRIPT
echo 'copying public ssh keys to VMs'
mkdir -p /home/vagrant/.ssh
chmod 700 /home/vagrant/.ssh
echo '#{public_key}' >> /home/vagrant/.ssh/authorized_keys
chmod -R 600 /home/vagrant/.ssh/authorized_keys
echo 'Host 192.168.60.*' >> /home/vagrant/.ssh/config
echo 'StrictHostKeyChecking no' >> /home/vagrant/.ssh/config
echo 'UserKnownHostsFile=/dev/null' >> /home/vagrant/.ssh/config
chmod 600 -R /home/vagrant/.ssh/config
chown -R vagrant:vagrant /home/vagrant/.ssh/
SCRIPT

$privkey = <<SCRIPT
echo 'Set permission for private key'
chmod 600 /home/vagrant/.ssh/id_rsa
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "generic/rocky8"
  config.vm.box_version = "3.4.4"
  config.ssh.insert_key = false
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.provider :virtualbox do |v|
    v.memory = 1000
    v.linked_clone = true
  end

  #This will be the node to SSH into for ansible
  config.vm.define "controlnode" do |control|
    control.vm.hostname = "controlnode"
    control.vm.network :private_network, ip: "192.168.60.2"
    

    #Sync Folder Section.
    control.vm.synced_folder "./ansible", "/home/vagrant/ansible",
    type: "rsync",rsync_exclude: ".git/"

    #Provisioning Section
    control.vm.provision "file", source: "id_rsa", destination: "/home/vagrant/.ssh/id_rsa"
    control.vm.provision "shell", inline: $install
    control.vm.provision "shell", inline: $pubkeyex
    control.vm.provision "shell", inline: $privkey
    control.vm.provision "shell", inline: "dnf install ansible -y"
    end

  ##Nodes to run Ansible against##

    (1..3).each do |i|
      config.vm.define "node#{i}" do |n|
        n.vm.hostname = "node#{i}"
        n.vm.network :private_network, ip: "192.168.60.#{i + 2}"

        #Provisioning Section
        n.vm.provision "shell", inline: $install
        n.vm.provision "shell", inline: $pubkeyex

      end
    end
  end